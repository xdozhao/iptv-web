jasypt: # jasypt 配置
  encryptor:
    password: ${jasypt_encryptor_password} # 密钥
    algorithm: PBEWithMD5AndDES # 加密算法
    iv-generator-classname: org.jasypt.iv.NoIvGenerator # IV生成器类
    key-obtention-iterations: 1000 # 迭代次数
    pool-size: 1 # 池大小
    provider-name: SunJCE
    salt-generator-classname: org.jasypt.salt.RandomSaltGenerator
    string-output-type: base64 # 输出类型
mybatis-flex:
  admin-config:
    enable: false
  datasource:
    master:
      url: jdbc:mysql://127.0.0.1:3306/iptv?useUnicode=true&characterEncoding=utf-8&serverTimezone=Asia/Shanghai&connectTimeout=10000&socketTimeout=10000&autoReconnect=true&useSSL=false
      username: ENC(8YbVy8dnr99Xfm5Rbu4vvw==)
      password: ENC(gZL5yX/nN01bjgpeROhcQA==)
    postgresql:
      url: jdbc:postgresql://127.0.0.1:5432/postgres
      username: ENC(1U13vEMl26nsx9Dl7eL6hxO6IDADD5CI)
      password: ENC(CL19XNR4HLl3PdInH8i3VA==)
spring:
  datasource: # JDBC 配置
    druid: # Druid 配置
      initial-size: 15 # 初始化时建立物理连接的个数。初始化发生在显示调用init方法，或者第一次getConnection时
      min-idle: 15 # 最小连接池数量
      max-active: 60 # 最大连接池数量
      max-wait: 60000 # 配置从连接池获取连接等待超时的时间
      keep-alive: true
      kill-when-socket-read-timeout: true
      socket-timeout: 600000 # socket超时时间 默认 10000ms
      connect-timeout: 10000 # 驱动配置连接超时时间，在连接的时候生效，默认值：10000ms
      phy-max-use-count: -1 # 最大的物理连接数，超过则会被强制回收，默认：-1（不建议配置）
      phy-timeout-millis: -1 # 连接的最大物理连接时长，超过则会被强制回收，默认：-1
      time-between-eviction-runs-millis: 60000 # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
      min-evictable-idle-time-millis: 300000 # 连接保持空闲而不被驱逐的最小时间
      validation-query: SELECT 1 FROM DUAL # 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用。
      validation-query-timeout: 3000 # 单位：秒，检测连接是否有效的超时时间。底层调用jdbc Statement对象的void setQueryTimeout(int seconds)方法
      test-while-idle: true # 建议配置为true，不影响性能，并且保证安全性。申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-on-borrow: false # 申请连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      test-on-return: false # 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能。
      pool-prepared-statements: false # 是否缓存preparedStatement，也就是PSCache。PSCache对支持游标的数据库性能提升巨大，比如说oracle。在mysql下建议关闭。
      max-pool-prepared-statement-per-connection-size: 20 # 要启用PSCache，必须配置大于0，当大于0时，poolPreparedStatements自动触发修改为true。
      useGlobalDataSourceStat: true  # 合并多个DruidDataSource的监控数据
      stat-view-servlet: #配置statViewFilter（配置Druid后台管理Servlet页面），用于展示Druid的统计信息
        enabled: true # sql监控开关
        url-pattern: /druid/* # 访问内置监控页面的路径，内置监控页面的首页是/druid/index.html
        reset-enable: true # 是否允许清空统计数据，重新计算  true:允许  false:不允许
        login-username: admin # 用户名
        login-password: 123456 # 密码
        allow: "" # 后台允许谁可以访问。默认就是允许所有访问。
        deny: "" # 后台禁止谁能访问
      web-stat-filter: # 配置WebStatFilter，用于采集web关联监控的数据
        enabled: true # web url监控
        session-stat-enable: true # session监控
        session-stat-max-count: 100 # session的最大个数，默认100
        url-pattern: /* # 过滤所有url
        exclusions: "*.js,*.gif,*.jpg,*.png,*.css,*.ico,/druid/*" # 排除一些不必要的url
      filters: stat,wall,slf4j # 属性类型是字符串,配置监控统计拦截的filters，去掉后监控界面sql无法统计，通过别名的方式配置扩展插件，常用的插件有：监控统计用的filter:stat 日志用的filter:log4j 防御sql注入的filter:wall